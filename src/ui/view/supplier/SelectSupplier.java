/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.view.supplier;

import controller.supplier.SupplierController;
import database.connector.DBConnection;
import java.sql.SQLException;
import javax.swing.JInternalFrame;
import javax.swing.table.DefaultTableModel;
import model.supplier.Supplier;

/**
 *
 * @author Yasas
 */
public class SelectSupplier extends javax.swing.JInternalFrame {

    private static final org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(SelectSupplier.class);

    private DefaultTableModel tableModel;

    private final JInternalFrame parent;

    /**
     * Creates new form selectSupplier
     *
     * @param parent
     */
    public SelectSupplier(JInternalFrame parent) {
        initComponents();
        this.parent = parent;
        initTable();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        tblSupplier = new javax.swing.JTable();
        btnCancel = new javax.swing.JButton();
        btnSelectSupplier = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblSupplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supplier Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSupplier.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblSupplier.setRowHeight(30);
        jScrollPane3.setViewportView(tblSupplier);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSelectSupplier.setText("Select");
        btnSelectSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectSupplierActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSelectSupplier)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnSelectSupplier))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        close();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSelectSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectSupplierActionPerformed
        selectSupplier();
    }//GEN-LAST:event_btnSelectSupplierActionPerformed

    public static void main(String args[]) {
        /*
         java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
         new selectSupplier().setVisible(true);
         }
         });
         */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSelectSupplier;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblSupplier;
    // End of variables declaration//GEN-END:variables

    private void initTable() {
        try {
            tableModel = (DefaultTableModel) tblSupplier.getModel();
            for (Supplier s : SupplierController.getAllSuppliers()) {
                tableModel.addRow(new Supplier[]{s});
            }
            DBConnection.closeConnectionToDB();
        } catch (SQLException ex) {
            logger.error("Error: " + ex.getMessage());
        }
    }

    private void selectSupplier() {
        if (tblSupplier.getSelectedRow() >= 0 && tblSupplier.getSelectedColumn() >= 0) {
            Supplier selectedSupplier = (Supplier) tableModel.getValueAt(tblSupplier.getSelectedRow(), tblSupplier.getSelectedColumn());
            ((SupplierInterface) parent).setSupplier(selectedSupplier);
            close();
        } else {
            util.Utilities.showMsgBox("Select a supplier to continue", "Supplier Selection", 0);
        }
    }

    private void close() {
        parent.setEnabled(true);
        this.dispose();
    }
}
