package ui.view.ledger;
//
// <editor-fold defaultstate="collapsed" desc="Imports">

import controller.inventory.ProductController;
import controller.ledger.GoodRecieveNoteController;
import controller.supplier.SupplierController;
import database.connector.DBConnection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.PlainDocument;
import model.inventory.Batch;
import model.inventory.BatchBuilder;
import model.inventory.Product;
import model.ledger.GoodRecieveNote;
import model.supplier.Supplier;
import util.DoubleFilter;

// </editor-fold>
// 
public class GRNInterface extends javax.swing.JInternalFrame {
    //
    // <editor-fold defaultstate="collapsed" desc="Variables">

    private static final org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(GRNInterface.class);

    private final DefaultTableModel model;

    // </editor-fold>
    //
    // <editor-fold defaultstate="collapsed" desc="Netbeans generated">
    /**
     * Creates new form GRNInterface
     */
    public GRNInterface() {
        initComponents();
        initInterface();
        model = (DefaultTableModel) itemDataTable.getModel();
        model.addTableModelListener(new TableModelListenerImpl(model));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnNewItem = new javax.swing.JButton();
        btnDeleteItem = new javax.swing.JButton();
        btnAddGrn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemDataTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        txtLoadingFee = new javax.swing.JTextField();
        txtSellingBillDiscount = new javax.swing.JTextField();
        txtPurchasingBillDiscount = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        comboLocation = new javax.swing.JComboBox();
        comboPaymentType = new javax.swing.JComboBox();
        comboSupplier = new javax.swing.JComboBox();
        datePickInvoiceDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtInvoiceNo = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        txtF16aNumber = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblTitle.setBackground(java.awt.SystemColor.textHighlight);
        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setLabelFor(this);
        lblTitle.setText("Good Recieve Note (GRN)");
        lblTitle.setAlignmentY(0.0F);
        lblTitle.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        lblTitle.setName(""); // NOI18N
        lblTitle.setOpaque(true);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btnNewItem.setText("Add");
        btnNewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewItemActionPerformed(evt);
            }
        });

        btnDeleteItem.setText("Delete");
        btnDeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteItemActionPerformed(evt);
            }
        });

        btnAddGrn.setText("Add GRN");
        btnAddGrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddGrnActionPerformed(evt);
            }
        });

        itemDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Product Id", "Description", "Cost Price", "Cost Discount", "Expiration date", "Selling Price", "Quantity", "Recieved Quantity", "Cost Value", "Selling Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false, true, true, true, true, true, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemDataTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        itemDataTable.setColumnSelectionAllowed(true);
        itemDataTable.setRowHeight(30);
        itemDataTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(itemDataTable);
        itemDataTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (itemDataTable.getColumnModel().getColumnCount() > 0) {
            itemDataTable.getColumnModel().getColumn(0).setMinWidth(30);
            itemDataTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            itemDataTable.getColumnModel().getColumn(0).setMaxWidth(30);
            itemDataTable.getColumnModel().getColumn(1).setMinWidth(100);
            itemDataTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            itemDataTable.getColumnModel().getColumn(1).setMaxWidth(100);
            itemDataTable.getColumnModel().getColumn(2).setMinWidth(200);
            itemDataTable.getColumnModel().getColumn(2).setPreferredWidth(200);
            itemDataTable.getColumnModel().getColumn(2).setMaxWidth(200);
            itemDataTable.getColumnModel().getColumn(3).setMinWidth(100);
            itemDataTable.getColumnModel().getColumn(3).setPreferredWidth(100);
            itemDataTable.getColumnModel().getColumn(3).setMaxWidth(100);
            itemDataTable.getColumnModel().getColumn(4).setMinWidth(100);
            itemDataTable.getColumnModel().getColumn(4).setPreferredWidth(100);
            itemDataTable.getColumnModel().getColumn(4).setMaxWidth(100);
            itemDataTable.getColumnModel().getColumn(5).setPreferredWidth(100);
            itemDataTable.getColumnModel().getColumn(6).setMinWidth(100);
            itemDataTable.getColumnModel().getColumn(6).setPreferredWidth(100);
            itemDataTable.getColumnModel().getColumn(6).setMaxWidth(100);
            itemDataTable.getColumnModel().getColumn(7).setMinWidth(100);
            itemDataTable.getColumnModel().getColumn(7).setPreferredWidth(100);
            itemDataTable.getColumnModel().getColumn(7).setMaxWidth(100);
            itemDataTable.getColumnModel().getColumn(8).setMinWidth(100);
            itemDataTable.getColumnModel().getColumn(8).setPreferredWidth(100);
            itemDataTable.getColumnModel().getColumn(8).setMaxWidth(100);
            itemDataTable.getColumnModel().getColumn(9).setPreferredWidth(100);
            itemDataTable.getColumnModel().getColumn(10).setPreferredWidth(100);
        }

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTextField1.setEditable(false);

        txtLoadingFee.setText("0");
        txtLoadingFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLoadingFeeActionPerformed(evt);
            }
        });

        txtSellingBillDiscount.setText("0");

        txtPurchasingBillDiscount.setText("0");

        jTextField7.setEditable(false);

        jTextField8.setEditable(false);

        jLabel9.setText("Selling");

        jLabel10.setText("Loading Fee");

        jLabel11.setText("Bill Discount");

        jLabel12.setText("Total Item Discount");

        jLabel13.setText("Total Value");

        jLabel14.setText("Purchasing");

        comboPaymentType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPaymentTypeActionPerformed(evt);
            }
        });

        jLabel2.setText("Date");

        jLabel3.setText("Supplier");

        jLabel6.setText("Location");

        jLabel7.setText("Payment Method");

        jLabel8.setText("Invoice No");

        txtF16aNumber.setEditable(false);

        jLabel1.setText("F16A Number");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jSeparator1)
                .addGap(10, 10, 10))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel14)
                            .addComponent(txtLoadingFee)
                            .addComponent(jTextField1)
                            .addComponent(txtPurchasingBillDiscount)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel9)
                            .addComponent(txtSellingBillDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(jLabel4)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboLocation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboPaymentType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtInvoiceNo))))
                        .addGap(10, 10, 10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtF16aNumber)
                            .addComponent(comboSupplier, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(datePickInvoiceDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextField7, jTextField8, txtSellingBillDiscount});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtF16aNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(datePickInvoiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel7))
                    .addComponent(comboPaymentType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtInvoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(0, 9, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel9))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLoadingFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPurchasingBillDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSellingBillDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDeleteItem, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNewItem, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(btnAddGrn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddGrn)
                    .addComponent(btnNewItem)
                    .addComponent(btnDeleteItem))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteItemActionPerformed
        deleteItem();
    }//GEN-LAST:event_btnDeleteItemActionPerformed

    private void btnNewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewItemActionPerformed
        addNewItem();
    }//GEN-LAST:event_btnNewItemActionPerformed

    private void txtLoadingFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLoadingFeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLoadingFeeActionPerformed

    private void comboPaymentTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPaymentTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPaymentTypeActionPerformed

    private void btnAddGrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddGrnActionPerformed
        recordGoodRecieveNote();
    }//GEN-LAST:event_btnAddGrnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GRNInterface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> {
            new GRNInterface().setVisible(true);
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddGrn;
    private javax.swing.JButton btnDeleteItem;
    private javax.swing.JButton btnNewItem;
    private javax.swing.JComboBox comboLocation;
    private javax.swing.JComboBox comboPaymentType;
    private javax.swing.JComboBox comboSupplier;
    private org.jdesktop.swingx.JXDatePicker datePickInvoiceDate;
    private javax.swing.JTable itemDataTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtF16aNumber;
    private javax.swing.JTextField txtInvoiceNo;
    private javax.swing.JTextField txtLoadingFee;
    private javax.swing.JTextField txtPurchasingBillDiscount;
    private javax.swing.JTextField txtSellingBillDiscount;
    // End of variables declaration//GEN-END:variables

    // </editor-fold>
    //
    // <editor-fold defaultstate="collapsed" desc="GRN Management">
    private void recordGoodRecieveNote() {
        /*
         (int f16bNumber, String invoiceNo, Date invoiceDate, Supplier supplier,
         String location, String paymentMethod, double loadingFee,
         double purchasingBillDiscount, double sellingBillDiscount)
         */
        GoodRecieveNote grn = new GoodRecieveNote(
                txtF16aNumber.getText(),
                txtInvoiceNo.getText(),
                datePickInvoiceDate.getDate(),
                (Supplier) comboSupplier.getSelectedItem(),
                (String) comboLocation.getSelectedItem(),
                (String) comboPaymentType.getSelectedItem(),
                Double.parseDouble(txtLoadingFee.getText()),
                Double.parseDouble(txtPurchasingBillDiscount.getText()),
                Double.parseDouble(txtSellingBillDiscount.getText())
        );

        for (int i = 0; i < model.getRowCount(); i++) {
            try {
                Batch b
                        = (BatchBuilder.Batch())
                        .withBatchId("B0")
                        .withGRNNumber(txtF16aNumber.getText())
                        .withProductId(model.getValueAt(i, 1).toString())
                        .withUnitCost(Double.parseDouble(model.getValueAt(i, 3).toString()))
                        .withCostDiscount(Double.parseDouble(model.getValueAt(i, 4).toString()))
                        .withUnitPrice(Double.parseDouble(model.getValueAt(i, 6).toString()))
                        .withQuantity(Double.parseDouble(model.getValueAt(i, 7).toString()))
                        .withExpirationDate(util.Utilities.getDateFromString(model.getValueAt(i, 5).toString()))
                        .withNotificationDate(null)
                        .withRecievedQuantity(Double.parseDouble(model.getValueAt(i, 8).toString()))
                        .withSoldQty(0.0)
                        .withDiscounted(true)
                        .withInStock(true)
                        .build();

                grn.addBatch(b);
            } catch (Exception ex) {
                util.Utilities.showMsgBox("Unable to add grn, Invalid batch", "Grn Error", 0);
                return;
            }
        }

        try {
            GoodRecieveNoteController.addGrn(grn);
            util.Utilities.showMsgBox("GRN added successfully", "Grn Success", 0);
            this.dispose();
        } catch (SQLException ex) {
            util.Utilities.showMsgBox("Unable to add grn", "Grn Error", 0);
            logger.error(ex.getMessage());
        }
    }

    // </editor-fold>
    //
    // <editor-fold defaultstate="collapsed" desc="Interface Management">
    private void initInterface() {
        try {
            for (Supplier s : SupplierController.getAllSuppliers()) {
                comboSupplier.addItem(s);
            }
        } catch (SQLException ex) {
            logger.error("Error: " + ex.getMessage());
        }

        // Add stores here
        comboLocation.addItem("stores");

        // Add payment methods here
        comboPaymentType.addItem("cheque");
        comboPaymentType.addItem("cash");
        comboPaymentType.addItem("credit");

        try {
            txtF16aNumber.setText(GoodRecieveNoteController.getNextGrnID());
        } catch (SQLException ex) {
            logger.error("Error: " + ex.getMessage());
        }

        datePickInvoiceDate.setDate(util.Utilities.getTody());

        ((PlainDocument) txtLoadingFee.getDocument()).setDocumentFilter(new DoubleFilter());
        ((PlainDocument) txtPurchasingBillDiscount.getDocument()).setDocumentFilter(new DoubleFilter());
        ((PlainDocument) txtSellingBillDiscount.getDocument()).setDocumentFilter(new DoubleFilter());
    }

    // </editor-fold>
    //
    // <editor-fold defaultstate="collapsed" desc="Item Management">
    private boolean isItemValid(int row) {
        if (row >= 0 && row < model.getRowCount()) {
            for (int i = 0; i < model.getColumnCount(); i++) {
                if (model.getValueAt(row, i) == "" && model.isCellEditable(row, i)) {
                    return false;
                }
            }
            return true;
        }
        return false;
    }

    private void addNewItem() {
        if (model.getRowCount() == 0 || isItemValid(model.getRowCount() - 1)) {
            model.addRow(new Object[]{model.getRowCount() + 1, "", "", "", "", "", "", ""});
        }
    }

    public void addNewItem(Product pid) {
        if (model.getRowCount() == 0 || isItemValid(model.getRowCount() - 1)) {
            model.addRow(new Object[]{model.getRowCount() + 1, pid.getProductId(), pid.getProductName(), "", "", "", "", ""});
        }
    }

    private void deleteItem() {
        if (itemDataTable.getSelectedRow() >= 0 && itemDataTable.getSelectedRow() < model.getRowCount()) {
            model.removeRow(itemDataTable.getSelectedRow());
            for (int i = 0; i < model.getRowCount(); i++) {
                model.setValueAt(i + 1, i, 0);
            }
        }
    }

    private static class TableModelListenerImpl implements TableModelListener {

        private final DefaultTableModel model;

        public TableModelListenerImpl(DefaultTableModel model) {
            this.model = model;
        }

        @Override
        public void tableChanged(TableModelEvent e) {
            for (int row = 0; row < model.getRowCount(); row++) {
                try {
                    if (e.getColumn() == 1) {
                        // Auto generated Column
                        String productId = model.getValueAt(row, 1).toString();
                        fillProductDetails(row, productId);
                    } else if (e.getColumn() != 9 && e.getColumn() != 10) {
                        // Auto generated Column
                        Double result = Double.parseDouble(model.getValueAt(row, 3).toString()) * Integer.parseInt(model.getValueAt(row, 7).toString());
                        model.setValueAt(result.toString(), row, 9);
                        // Auto generated Column
                        result = Double.parseDouble(model.getValueAt(row, 7).toString()) * Integer.parseInt(model.getValueAt(row, 6).toString());
                        model.setValueAt(result.toString(), row, 10);
                    }
                    // model.fireTableCellUpdated(row, 8);/;
                } catch (Exception ex) {

                }
                // for (int column = 0; column < model.getColumnCount(); column++) {}
            }
        }

        private void fillProductDetails(int row, String productId) {
            Product result;
            try {
                result = ProductController.getProduct(productId);
                model.setValueAt(result.getProductName(), row, 2);
            } catch (SQLException ex) {
                logger.error(ex.getMessage());
                model.setValueAt("", row, 2);
            } finally {
                try {
                    DBConnection.closeConnectionToDB();
                } catch (SQLException ex) {
                    logger.error(ex.getMessage());
                }
            }
        }
    }

    // </editor-fold>
    //
}
